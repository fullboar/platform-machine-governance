# See here for image contents: https://github.com/microsoft/vscode-dev-containers/tree/v0.217.4/containers/python-3/.devcontainer/base.Dockerfile
FROM mcr.microsoft.com/vscode/devcontainers/python:0-3.10-bullseye

# Define the path to the virtualenv to work with
ARG VENV_PATH="/home/vscode/venv"
ENV KUBESEAL_VERSION=v0.18.1
ENV KUSTOMIZE_VERSION=v4.5.6
ENV KYVERNO_VERSION=v1.7.2

RUN apt-get update && \
    apt-get -y upgrade

# COPY requirements.txt /tmp/pip-tmp/
COPY oc-49-linux-arm64.tar.gz /tmp

# RUN pip3 --disable-pip-version-check \
#    --no-cache-dir install -r /tmp/pip-tmp/requirements.txt && \
#    rm -rf /tmp/pip-tmp 

# arch=$(arch | sed s/aarch64/arm64/ | sed s/x86_64/amd64/)

RUN curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/arm64/kubectl" && \
    curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/arm64/kubectl.sha256" && \
    echo "$(cat kubectl.sha256) kubectl" | sha256sum --check && \
    sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl && \
    rm -f kubectl kubectl.sha256

RUN curl -L https://github.com/kyverno/kyverno/releases/download/${KYVERNO_VERSION}/kyverno-cli_${KYVERNO_VERSION}_linux_arm64.tar.gz| \
    tar -xz -C /tmp && \
    sudo install -o root -g root -m 0755 /tmp/kyverno /usr/local/bin/kyverno && \
    rm -f /tmp/kyverno

RUN curl -LOJ https://github.com/bitnami-labs/sealed-secrets/releases/download/${KUBESEAL_VERSION}/kubeseal-linux-arm64 && \
    sudo install -o root -g root -m 0755 kubeseal-linux-arm64 /usr/local/bin/kubeseal

RUN curl -L https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2F${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_arm64.tar.gz| \
    tar -xz -C /tmp && \
    sudo install -o root -g root -m 0755 /tmp/kustomize /usr/local/bin/kustomize && \
    rm -f /tmp/kustomize*.tar.gz /tmp/kustomize

RUN tar -zxf /tmp/oc-49-linux-arm64.tar.gz -C /tmp && \
    sudo install -o root -g root -m 0755 /tmp/oc /usr/local/bin/oc && \
    rm -rf /tmp/oc README.md

# FROM jupyter/minimal-notebook:aarch64-ubuntu-22.04

# [Option] Install Node.js
# ARG INSTALL_NODE="true"
# ARG NODE_VERSION="lts/*"

# RUN if [ "${INSTALL_NODE}" = "true" ]; then su vscode -c "umask 0002 && . /usr/local/share/nvm/nvm.sh && nvm install ${NODE_VERSION} 2>&1"; fi

# [Optional] Uncomment this section to install additional OS packages.
# RUN apt-get update && \
#   export DEBIAN_FRONTEND=noninteractive \
#   && apt-get -y install --no-install-recommends postgresql-client libpq-dev

# COPY requirements.txt /tmp/pip-tmp/
# COPY oc-49-linux-arm64.tar.gz /tmp/

# RUN /opt/conda/bin/python3 \
#   -m pip \
#   --disable-pip-version-check \
#   --no-cache-dir install \
#   -r /tmp/pip-tmp/requirements.txt && \
#   rm -rf /tmp/pip-tmp

# RUN tar -zxf /tmp/oc-49-linux-arm64.tar.gz \
#   -C /usr/bin/ && \
#   rm -rf /tmp/oc-49-linux-arm64.tar.gz
